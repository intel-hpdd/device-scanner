language: rust
cache: cargo

jobs:
  include:
    - stage: test
      name: "Unit Tests"
      language: generic
      script:
        - docker run -d -it --name libzfs -v $(pwd):/device-scanner:rw imlteam/zfs
        - docker exec -i libzfs bash -c 'yum install -y openssl-devel'
        - docker exec -i libzfs bash -c 'cd /device-scanner && cargo test'
    - stage: test
      name: "Format Check"
      rust: 1.30.1
      before_script:
        - rustup component add rustfmt-preview
      script:
        - cargo fmt --all -- --check
    - stage: test
      name: "Linting Check"
      language: generic
      script:
        - docker run -d -it --name libzfs -v $(pwd):/device-scanner:rw imlteam/zfs
        - docker exec -i libzfs bash -c 'yum install -y openssl-devel'
        - docker exec -i libzfs bash -c 'rustup update'
        - docker exec -i libzfs bash -c 'rustup component add clippy-preview'
        - docker exec -i libzfs bash -c 'cd /device-scanner && cargo clippy --all-targets --all-features'
    - stage: cd
      name: "Continuous Deployment"
      language: generic
      script:
        - export OWNER=managerforlustre
        - export PROJECT=device-scanner-devel
        - export PACKAGE=iml-device-scanner
        - export CLONE_URL=https://github.com/whamcloud/device-scanner.git
        - export SPEC=iml-device-scanner.spec
        - docker run -it -e OWNER="$OWNER" -e PROJECT="$PROJECT" -e PACKAGE="$PACKAGE" -e CLONE_URL="$CLONE_URL" -e SPEC="$SPEC" -e KEY="$encrypted_253525cedcf6_key" -e IV="$encrypted_253525cedcf6_iv" -v $(pwd):/build:rw imlteam/copr
stages:
  - test
  - name: cd
    if: branch = master AND type = push AND fork = false
