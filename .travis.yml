jobs:
  include:
    - stage: test
      language: generic
      sudo: required
      env: Type='virus scan'
      script:
        - ./include/travis/virus-scan.sh
    - stage: test
      language: generic
      env: Type='build'
      sudo: required
      services:
        - docker
      script:
        - docker run -d -it --name libzfs-dotnet -v $(pwd):/device-scanner:rw intelhpdd/libzfs-dotnet
        - docker exec -i libzfs-dotnet bash -c 'cd /device-scanner/ && npm i && npm run restore && dotnet fable npm-build'
    - stage: test
      language: generic
      env: Type='unit test'
      sudo: required
      services:
        - docker
      script:
        - docker run -d -it --name libzfs-dotnet -v $(pwd):/device-scanner:rw intelhpdd/libzfs-dotnet
        - docker exec -i libzfs-dotnet bash -c 'cd /device-scanner/ && npm i && npm run restore && npm test'
    - stage: deploy
      language: csharp
      dotnet: 2.1.4
      mono: latest
      if: branch =~ ^v\d+\.\d+\.\d+$
      before_deploy:
        - nvm install 8
        - npm run restore
        - dotnet fable npm-build
      deploy:
        skip_cleanup: true
        provider: npm
        email: "$NPM_EMAIL"
        api_key: "$NPM_TOKEN"
        on:
          tags: true
          repo: intel-hpdd/device-scanner
    - stage: deploy
      if: branch =~ ^v\d+\.\d+\.\d+-.+$
      language: generic
      env: Type='Copr deploy'
      sudo: required
      services:
        - docker
      before_deploy:
        - docker pull centos:centos7
        - openssl aes-256-cbc -K $encrypted_253525cedcf6_key -iv $encrypted_253525cedcf6_iv -in include/copr-mfl.enc -out include/copr-mfl -d
        - curl -O https://raw.githubusercontent.com/m3t/travis_wait/master/travis_wait
        - chmod 755 travis_wait
      deploy:
        skip_cleanup: true
        provider: script
        script: ./travis_wait "./include/travis/run_in_centos7_docker.sh include/travis/copr-deploy.sh"
        on:
          all_branches: true
