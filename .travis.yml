jobs:
  include:
    - stage: test
      env: Type='virus scan'
      script:
        - sudo apt-get install clamav -y
        - sudo freshclam
        - clamscan --quiet -r ./
    - stage: test
      env: Type='build'
      sudo: required
      services:
        - docker
      script:
        - docker run -d -it --name libzfs-dotnet -v $(pwd):/device-scanner:rw intelhpdd/libzfs-dotnet
        - docker exec -i libzfs-dotnet bash -c 'cd /device-scanner/ && npm i && npm run restore && dotnet fable npm-run build'
    - stage: test
      env: Type='unit test'
      sudo: required
      services:
        - docker
      script:
        - docker run -d -it --name libzfs-dotnet -v $(pwd):/device-scanner:rw intelhpdd/libzfs-dotnet
        - docker exec -i libzfs-dotnet npm i -g codecov
        - docker exec -i libzfs-dotnet bash -c 'cd /device-scanner/ && npm i && npm run restore && npm test'
      after_success:
        - docker exec -i libzfs-dotnet codecov
    - stage: deploy
      language: csharp
      dotnet: 2.1.3
      mono: latest
      if: branch =~ ^v\d+\.\d+\.\d+$
      before_deploy:
        - nvm install 8
        - npm install -g codecov
        - dotnet fable npm-run build
      deploy:
        skip_cleanup: true
        provider: npm
        email: "$NPM_EMAIL"
        api_key: "$NPM_TOKEN"
        on:
          tags: true
          repo: intel-hpdd/device-scanner
