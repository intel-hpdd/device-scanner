sudo: required
services:
  - docker

jobs:
  include:
    - stage: test
      language: generic
      env: Type='virus scan'
      script:
        - ./include/travis/virus-scan.sh
    - stage: test
      language: generic
      env: Type='build'
      script:
        - docker run -d -it --name libzfs-dotnet -v $(pwd):/device-scanner:rw intelhpdd/libzfs-dotnet
        - docker exec -i libzfs-dotnet bash -c 'cd /device-scanner/ && npm i && npm run restore && dotnet fable npm-build'
    - stage: test
      language: generic
      env: Type='unit test'
      script:
        - docker run -d -it --name libzfs-dotnet -v $(pwd):/device-scanner:rw intelhpdd/libzfs-dotnet
        - docker exec -i libzfs-dotnet bash -c 'cd /device-scanner/ && npm i && npm run restore && npm test'
    - stage: deploy
      language: generic
      if: branch =~ ^v\d+\.\d+\.\d+$
      script:
        - docker run -d -it --name libzfs-dotnet -v $(pwd):/device-scanner:rw intelhpdd/libzfs-dotnet
        - docker exec -i libzfs-dotnet bash -c 'cd /device-scanner/ && npm i && npm run restore && dotnet fable npm-build'
        - docker exec -i libzfs-dotnet bash -c "echo '//registry.npmjs.org/:_authToken=$NPM_TOKEN' > ~/.npmrc"
        - docker exec -i libzfs-dotnet bash -c "cd /device-scanner && npm pub"
    - stage: deploy
      if: branch =~ ^v\d+\.\d+\.\d+-.+$
      language: generic
      env: Type='Copr deploy'
      before_deploy:
        - openssl aes-256-cbc -K $encrypted_253525cedcf6_key -iv $encrypted_253525cedcf6_iv -in include/copr-mfl.enc -out include/copr-mfl -d
        - curl -O https://raw.githubusercontent.com/m3t/travis_wait/master/travis_wait
        - chmod 755 travis_wait
      deploy:
        skip_cleanup: true
        provider: script
        script: ./travis_wait "./include/travis/run_in_centos7_docker.sh include/travis/copr-deploy.sh"
        on:
          all_branches: true
    - stage: deploy
      env: Type='bintray development deploy'
      language: csharp
      dotnet: 2.1.4
      mono: latest
      # if: branch = master AND env(TRAVIS_TAG) IS blank
      script:
        - nvm install 8
        - npm i
        - npm run restore
        - dotnet fable npm-build
        - npm pack
        - rename 's/^iml\-//' iml-device-scanner-*.tgz
        - npm run mock
        - PACKAGE_VERSION=$(node -p -e "require('./package.json').version")
        - RELEASE=$(git rev-list HEAD | wc -l)
        - RPM_NAME=iml-device-scanner-$PACKAGE_VERSION-$RELEASE.el7.centos.x86_64.rpm
        - HEADER=$(node -p -e "require('./.deploy_bintray.json').contentType")
        - DETAILS=$(node -p -e "require('./.deploy_bintray.json').jsonDetails")
        - docker exec -i mock bash -xec "curl -H '$HEADER' -X POST -d '$DETAILS' -u$BINTRAY_USER:$BINTRAY_KEY https://api.bintray.com/packages/intel-hpdd/intelhpdd-build"
        - docker exec -i mock bash -xec "curl -T /var/lib/mock/epel-7-x86_64/result/$RPM_NAME -u$BINTRAY_USER:$BINTRAY_KEY https://api.bintray.com/content/intel-hpdd/intelhpdd-build/iml-device-scanner/$PACKAGE_VERSION/$RPM_NAME?publish=1"
